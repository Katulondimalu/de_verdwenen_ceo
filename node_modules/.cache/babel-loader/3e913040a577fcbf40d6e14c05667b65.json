{"ast":null,"code":"var _jsxFileName = \"/Users/stichtinghelden/Documents/GitHub/Spaceship_Earth/spaceship_earth/src/components/InlineVideo/index.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InlineVideo = _ref => {\n  let {\n    src,\n    height = undefined,\n    width = undefined\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      borderRadius: 5\n    },\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      width: width,\n      height: height,\n      preload: \"metadata\",\n      onClick: e => {//let video = /** @type {HTMLVideoElement} */ (e.currentTarget);\n        // video.muted = !video.muted;\n        // if (video.paused) {\n        //   video.play();\n        // }\n        // @ts-ignore\n        // video.webkitEnterFullScreen?.();\n        // video.requestFullscreen?.();\n      },\n      onPause: e => {// let video = /** @type {HTMLVideoElement} */ (e.currentTarget);\n        // video.muted = true;\n        // video.play();\n      } // muted={true}\n      ,\n      playsInline: true // autoPlay\n      ,\n      controls: true // loop\n      ,\n      style: {\n        borderRadius: 20,\n        width: '100%',\n        backgroundColor: 'black'\n      },\n      src: `${src}#t=0.1`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InlineVideo;\nexport default InlineVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"InlineVideo\");","map":{"version":3,"names":["React","InlineVideo","src","height","undefined","width","borderRadius","e","backgroundColor"],"sources":["/Users/stichtinghelden/Documents/GitHub/Spaceship_Earth/spaceship_earth/src/components/InlineVideo/index.js"],"sourcesContent":["import React from 'react';\n\nconst InlineVideo = ({ src, height = undefined, width = undefined }) => {\n  return (\n    <div\n      style={{\n        borderRadius: 5,\n      }}\n    >\n      <video\n        width={width}\n        height={height}\n        preload='metadata'\n        onClick={(e) => {\n          //let video = /** @type {HTMLVideoElement} */ (e.currentTarget);\n          // video.muted = !video.muted;\n          // if (video.paused) {\n          //   video.play();\n          // }\n          // @ts-ignore\n          // video.webkitEnterFullScreen?.();\n          // video.requestFullscreen?.();\n        }}\n        onPause={(e) => {\n          // let video = /** @type {HTMLVideoElement} */ (e.currentTarget);\n          // video.muted = true;\n          // video.play();\n        }}\n        // muted={true}\n        playsInline={true}\n        // autoPlay\n        controls\n        // loop\n        style={{\n          borderRadius: 20,\n          width: '100%',\n          backgroundColor: 'black',\n        }}\n        src={`${src}#t=0.1`}\n      />\n    </div>\n  );\n};\n\nexport default InlineVideo;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,QAAoD;EAAA,IAAnD;IAAEC,GAAF;IAAOC,MAAM,GAAGC,SAAhB;IAA2BC,KAAK,GAAGD;EAAnC,CAAmD;EACtE,oBACE;IACE,KAAK,EAAE;MACLE,YAAY,EAAE;IADT,CADT;IAAA,uBAKE;MACE,KAAK,EAAED,KADT;MAEE,MAAM,EAAEF,MAFV;MAGE,OAAO,EAAC,UAHV;MAIE,OAAO,EAAGI,CAAD,IAAO,CACd;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACD,CAbH;MAcE,OAAO,EAAGA,CAAD,IAAO,CACd;QACA;QACA;MACD,CAlBH,CAmBE;MAnBF;MAoBE,WAAW,EAAE,IApBf,CAqBE;MArBF;MAsBE,QAAQ,MAtBV,CAuBE;MAvBF;MAwBE,KAAK,EAAE;QACLD,YAAY,EAAE,EADT;QAELD,KAAK,EAAE,MAFF;QAGLG,eAAe,EAAE;MAHZ,CAxBT;MA6BE,GAAG,EAAG,GAAEN,GAAI;IA7Bd;MAAA;MAAA;MAAA;IAAA;EALF;IAAA;IAAA;IAAA;EAAA,QADF;AAuCD,CAxCD;;KAAMD,W;AA0CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}